#+TITLE: Cascading StyleSheets
#+OPTIONS: num:nil toc:nil H:2 html_postamble:nil 
#+OPTIONS: reveal_center:t reveal_control:t reveal_height:-1
#+OPTIONS: reveal_history:nil reveal_keyboard:t reveal_overview:t
#+OPTIONS: reveal_progress:t reveal_rolling_links:nil
#+OPTIONS: reveal_single_file:t reveal_slide_number:"c"
#+OPTIONS: reveal_title_slide:auto reveal_width:-1
#+REVEAL_MARGIN: -1
#+REVEAL_MIN_SCALE: -1
#+REVEAL_MAX_SCALE: -1
#+REVEAL_ROOT: file:///mnt/hackit/codeds/github-repos/reveal.js/reveal.js
#+REVEAL_TRANS: linear
#+REVEAL_SPEED: default
#+REVEAL_THEME: night
#+REVEAL_PREAMBLE:nil
#+REVEAL_POSTAMBLE:nil
#+REVEAL_HIGHLIGHT_CSS: %r/lib/css/zenburn.css
#+REVEAL_EXTRA_CSS: ./modified.css


* 
    :PROPERTIES:
    :reveal_background: ./images/web-development.jpg
    :reveal_background_size: 700px
    :reveal_background_trans: slide
    :END:

* What is CSS? 
  #+BEGIN_QUOTE
  Cascading Style Sheets is a style sheet language developed to control the presentation of markup language documents.
  #+END_QUOTE

  CSS deals with the presentation while HTML deals with structure of the web.
  
* What is CSS? 
  - A style sheet is a set of rule defining how an html element will be "presented" in the browser.
    #+BEGIN_QUOTE
    These rules are targeted to specific element in the html document.
    #+END_QUOTE
  
* 
  :PROPERTIES: 
  :reveal_background: ./images/cssvshtml.jpg
  :reveal_background_size: 700px
  :reveal_background_trans: slide
  :END:

  
* 
    :PROPERTIES:
    :reveal_background: ./images/diff.jpg
    :reveal_background_size: 600px
    :reveal_background_trans: slide
    :END:

* CSS 
  - Style Sheets are a collection of formatting rules
  - Styles are mostly contained in an external file

* What's cascade? 
  - Set of rules for resolving conflicts with multiple CSS rules applied to the same elements
    
    #+BEGIN_SRC css
    h1 {
    color: red; 
    }
    h1 {
    color: blue;
    }
    #+END_SRC


* How's CSS applied ? 
  #+ATTR_REVEAL: :frag (grow)
   - Browser Stylesheets
   - Linked ( External ) Stylesheets
   - Embedded ( Internal ) Stylesheets
   - Inline (Internal ) Stylesheets

* 
  :PROPERTIES: 
  :reveal_background: ./images/css.jpg
  :reveal_background_size: 700px
  :reveal_background_trans: slide
  :END:

* Selectors 
     Element Selectors 
     #+BEGIN_SRC html 
     <p> Hello world </p>
     #+END_SRC
      #+BEGIN_SRC css 
      p { color: red; }
      #+END_SRC

* Selectors     
     Class selectors 
      #+BEGIN_SRC html
      <h1 class="heading"> Hello world </h1>
      #+END_SRC
      #+BEGIN_SRC css
      .heading { color: red; }
      #+END_SRC

* Selectors     
  Id selectors 
      #+BEGIN_SRC html
      <h1 id="heading"> Hello world </h1>
      #+END_SRC
      #+BEGIN_SRC css
      #heading { color: red; }
      #+END_SRC
	

* Unique vs non-unique
    :PROPERTIES:
    :reveal_background: ./images/idvsclass.jpg
    :reveal_background_size: 700px
    :reveal_background_trans: slide
    :END:      

* Background 
	_HTML_
  #+BEGIN_SRC html 
	<div class="background_demo"> 
	
	</div>
	#+END_SRC
	_CSS_
	#+BEGIN_SRC css 
	.background_demo { 
	
	background-color: red;
	background-image: url("path_of_image");
	background-repeat: repeat-x || repeat-y || no-repeat ;
	background-position: right top;
	background-attachment: fixed;
	}
	#+END_SRC

* Box Model
  :PROPERTIES: 
  :reveal_background: ./images/boxmodel.png
  :reveal_background_trans: slide
	:reveal_background_size: 700px
  :END:      

* Margin
	_HTML_
	#+BEGIN_SRC html 
	<div class="one">This is a paragraph. </div>
	#+END_SRC
	_CSS_
	#+BEGIN_SRC css 
	.one { margin: 25px 50px 75px 100px; }
	// OR 
	.one {  margin: 25px 50px 75px; }
	//OR
	.one { margin: 25px 50px; }
	//OR
	.one { margin: 25px;}
	#+END_SRC


* Border
	_HTML_
	#+BEGIN_SRC html 
	<div class="border_demo"> <p>This is a paragraph </p></div>
	#+END_SRC
	_CSS_
	#+BEGIN_SRC css 
	.border_demo p {
	     border-style: dotted || dashed || solid || double || none ;
			 border-width: 10px;
			 border-color: red;
			 border-top-style: dotted;
			 border-radius: 15px;
	}
	#+END_SRC

* Padding 
	_HTML_
	#+BEGIN_SRC html 
	<p class="padding_demo"> This is a padding demo </p>
	#+END_SRC
	_CSS_
	#+BEGIN_SRC css 
	.padding_demo {
	padding: 10px 20px 30px 40px;
	padding: 10px 20px 40px;
	padding: 10px 30px;
	padding: 30px;
	}
	#+END_SRC

* Height and Width 
	
	#+BEGIN_QUOTE
	Please see for yourself.......too easy
	#+END_QUOTE

* Display Property
	#+BEGIN_QUOTE
	How u display elements in a web page?
	#+END_QUOTE
** BLOCK LEVEL ELEMENTS
	 #+BEGIN_QUOTE
	 starts on new line \\
	 takes up full width available 
 	 #+END_QUOTE
	 #+BEGIN_EXAMPLE
	 <div> , <form> , <header> , <footer> , <section> , <p>
	 #+END_EXAMPLE


** INLINE LEVEL ELEMENTS 
	 #+BEGIN_QUOTE
	 takes as much as width nescessary
	 #+END_QUOTE
	 #+BEGIN_EXAMPLE
	 <span> , <a> , <img>
	 #+END_EXAMPLE

** Example
	 #+BEGIN_SRC css 
	 p { 
	  display: block;
		display: inline; 
		display: none; 
	 }
	 #+END_SRC

* Position Property 
	#+BEGIN_QUOTE
	For position elements in the web page.
	#+END_QUOTE
	
	#+BEGIN_SRC css 

  postion: fixed;
  postion: relative;
  position: static;
  postion: absolute;

	#+END_SRC
	Postion property uses the following values:
	#+BEGIN_SRC css 
  	top: 200px;
  	bottom: 400px;
  	right: 500px;
  	left: 20px;
	#+END_SRC

** postion: fixed
	 
	 #+BEGIN_QUOTE
	 Fixes the element anywhere it's specified.
	 #+END_QUOTE
	 #+BEGIN_SRC css 
	 #box1 {
	    position: fixed;
			top: 45px;
	 }
	 #+END_SRC


** position: static 
	 #+BEGIN_QUOTE
	 Default property of the elements 
	 #+END_QUOTE

	 - Can't apply properties like top,bottom,right,left.
** position: relative
	 #+BEGIN_QUOTE
	 Element will be positioned relative to it's normal position.
	 #+END_QUOTE

** position: absolute	 
	 - Elements will be removed from its normal flow
	 - And positioned according to it's parent elements
	 - If not parent element, then position according to body of the element

